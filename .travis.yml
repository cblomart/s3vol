language: go

sudo: required

services:
  - docker

before_install:
  - docker version
  - docker run --rm --privileged multiarch/qemu-user-static:register
  - wget https://github.com/multiarch/qemu-user-static/releases/download/v4.2.0-7/qemu-aarch64-static.tar.gz -O /tmp/qemu-aarch64-static.tar.gz
  - wget https://github.com/multiarch/qemu-user-static/releases/download/v4.2.0-7/qemu-arm-static.tar.gz -O /tmp/qemu-arm-static.tar.gz
  - tar zxvf /tmp/qemu-aarch64-static.tar.gz -C ./
  - tar zxvf /tmp/qemu-arm-static.tar.gz -C ./

install: true

before_script: true

script: 
  # prepare plugin dirs
  - mkdir -p ./plugin/{amd64,aarch64,arm}/rootfs
  # Build Intel(amd64) Docker image
  - docker build -f Dockerfile -t cblomart/s3vol:edge-amd64-rootfs .
  # Prepare rootfs for amd64
  - docker create --name tmp cblomart/s3vol:edge-amd64-rootfs
  - docker export tmp | tar -x -C ./plugin/amd64/rootfs
  - docker rm -vf tmp
  - cp config.json ./plugin/amd64/
  - docker plugin create cblomart/s3vol:edge-amd64 ./plugin/amd64/
  # Build Power(aarch64) Docker image
  - docker build -f Dockerfile.aarch64 -t cblomart/s3vol:edge-aarch64-rootfs .
  # Prepare rootfs for aarch64
  - docker create --name tmp cblomart/s3vol:edge-aarch64-rootfs
  - docker export tmp | tar -x -C ./plugin/aarch64/rootfs
  - docker rm -vf tmp
  - cp config.json ./plugin/aarch64/
  - docker plugin create cblomart/s3vol:edge-aarch64 ./plugin/aarch64/
  # Build Power(arm) Docker image
  - docker build -f Dockerfile.arm -t cblomart/s3vol:edge-arm-rootfs .
  # Prepare rootfs for arm
  - docker create --name tmp cblomart/s3vol:edge-arm-rootfs
  - docker export tmp | tar -x -C ./plugin/arm/rootfs
  - docker rm -vf tmp
  - cp config.json ./plugin/arm/
  - docker plugin create cblomart/s3vol:edge-arm ./plugin/arm/
  # List images
  - docker images

after_script: true